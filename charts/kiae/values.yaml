replicaCount: 1

image:
  repository: ghcr.io/kiaedev/kiae
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: { }
podSecurityContext: { }
  # fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8081

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: { }

tolerations: [ ]

affinity: { }

# kiae config
config:
  debug: false
  server:
    port: 8081
    url: http://localhost:8081

  mongodb:
    dsn: mongodb://root:password@kiae-mongodb:27017
    database: kiae

  loki:
    endpoint: http://kiae-loki:3100

  dex:
    adminEmail: "admin@example.com"
    # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
    adminPasswd: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
    clientID: kiae-1hcHAtc2Vj
    clientSecret: ZXhhbXBsZS1hcHAtc2VjcmV0
    endpoint: http://kiae-dex:5556
# connector example
#    connectors:
#      - type: github
#        id: github
#        name: GitHub
#        config:
#          clientID: $GITHUB_CLIENT_ID
#          clientSecret: $GITHUB_CLIENT_SECRET
#          redirectURI: http://kiae.localhost/dex/callback
#          org: kiaedev

# istio config
base:
  base:
    enableIstioConfigCRDs: false
  global:
    istioNamespace: kiae-system
istiod:
  global:
    istioNamespace: kiae-system
  meshConfig:
    accessLogFile: /dev/stdout

# loki config
loki-stack:
  promtail:
    config:
      clients:
        - url: http://kiae-loki:3100/loki/api/v1/push

# opentelemetry config
opentelemetry-collector:
  mode: deployment
  config:
    exporters:
      logging:
        loglevel: debug
      loki:
        endpoint: http://kiae-loki:3100/loki/api/v1/push
    extensions:
      health_check: { }
      memory_ballast: { }
    processors:
      attributes:
        actions:
          - action: insert
            key: loki.resource.labels
            value: okind, oname
          - action: insert
            key: loki.attribute.labels
            value: namespace, reason

          - action: insert
            key: namespace
            from_attribute: k8s.namespace.name
          - action: insert
            key: reason
            from_attribute: k8s.event.reason
      resource:
        attributes:
          - action: insert
            key: okind
            from_attribute: k8s.object.kind
          - action: insert
            key: oname
            from_attribute: k8s.object.name

      batch: { }
      memory_limiter:
        check_interval: 5s
        limit_mib: 409
        spike_limit_mib: 128
    receivers:
      k8s_events:
    service:
      pipelines:
        logs:
          exporters:
            - loki
          receivers:
            - k8s_events
          processors:
            - resource
            - attributes
      telemetry:
        metrics:
          address: 0.0.0.0:8888

# dex config
dex:
  configSecret:
    create: false
    name: kiae-dex

# mongodb config
mongodb:
  enabled: true
  auth:
    rootPassword: password